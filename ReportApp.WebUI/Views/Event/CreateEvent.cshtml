@model ReportApp.Domain.Entities.Event

@{
    ViewBag.Title = "Utwórz wydarzenie";
}
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<h2>Utwórz wydarzenie</h2>

@using (Html.BeginForm("CreateEvent", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.PrzedmiotID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("PrzedmiotID", "Wybierz przedmiot") lub @Html.ActionLink("dodaj",  "Create","Subject")
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EventforGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EventforGroup", "Wybierz grupe")
               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NazwaSpraw, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NazwaSpraw, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NazwaSpraw, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instrukcja, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" class="custom-file-input">
                @Html.ValidationMessageFor(model => model.Instrukcja, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model=>model.Instrukcja)
        <div class="form-group">
            @Html.LabelFor(model => model.DataPoczatku, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataPoczatku, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataPoczatku, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataKonca, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataKonca, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataKonca, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Utwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powróć do listy", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/raports/raports.js")
}
